clusterCut
hc$height
Target_list
plot(hc,cex=0.8,las=1)
clusterCut <- cutree(hc,4)
plot(hc,cex=0.8,las=1)
hc <- hclust(e)
clusterCut <- cutree(hc,4)
plot(hc,cex=0.8,las=1)
groups <- cutree(hc,k=4)
groups
rect.hclust(hc,k=4,border = "red")
table(groups,Target_list$MyProd1_Rx)
table(groups,Target_list$MyProd2_Rx)
table(groups,Target_list)
table(groups,Target_list$ID)
colnames(Target_list)
Target_list <- subset(Target_list,select = -c(customer_id,ID2,RX_Restriction_Indicator,PRESUMED_DEAD_FLAG))
Target_list <- unique(na.omit(read.csv("C://Users//chink//Downloads//data.csv")))
Target_list <- Target_list[,-c(26:31)]
Target_list <- subset(Target_list,select = -c(customer_id,ID2,RX_Restriction_Indicator,PRESUMED_DEAD_FLAG))
Target_list <- Target_list[1:50,]
model_cluster <- kmeans(Target_list,4)
Target_list
View(Target_list)
str(Target_list)
Target_list <- as.numeric(Target_list)
Target_list <- apply(Target_list,2,as.numeric)
model_cluster <- kmeans(Target_list,4)
colnames(Target_list)
Target_list <- subset(Target_list,select = -c(Primary_AD,Secondary,SPECIAlITY))
model_cluster <- kmeans(Target_list,4)
Target_list <- unique(na.omit(read.csv("C://Users//chink//Downloads//data.csv")))
dim(Target_list)
Target_list <- Target_list[,-c(26:31)]
Target_list <- subset(Target_list,select = -c(customer_id,ID2,RX_Restriction_Indicator,PRESUMED_DEAD_FLAG))
Target_list <- Target_list[1:50,]
row.names(Target_list) <- Target_list$customer_id
Target_list <- apply(Target_list,2,as.numeric)
Target_list <- subset(Target_list,select = -c(Primary_AD,Secondary,SPECIAlITY,State))
model_cluster <- kmeans(Target_list,4)
model_cluster
Target_list <- unique(na.omit(read.csv("C://Users//chink//Downloads//data.csv")))
Target_list <- Target_list[,-c(26:31)]
Target_list <- subset(Target_list,select = -c(customer_id,ID2,RX_Restriction_Indicator,PRESUMED_DEAD_FLAG))
row.names(Target_list) <- Target_list$customer_id
Target_list <- apply(Target_list,2,as.numeric)
Target_list <- subset(Target_list,select = -c(Primary_AD,Secondary,SPECIAlITY,State))
model_cluster <- kmeans(Target_list,4)
model_cluster
table(model_cluster$cluster)
model_cluster
summary(model_cluster)
str(model_cluster)
write.csv("dumb.csv",Target_list)
?write.csv
write.csv(Target_list,"dumb.csv")
Target_list <- unique(na.omit(read.csv("C://Users//chink//Downloads//data.csv")))
dim(Target_list)
Target_list <- Target_list[,-c(26:31)]
Target_list <- subset(Target_list,select = -c(customer_id,ID2,RX_Restriction_Indicator,PRESUMED_DEAD_FLAG))
d <- dist(as.matrix(Target_list))
Target_list <- unique(na.omit(read.csv("C://Users//chink//Downloads//data.csv")))
dim(Target_list)
Target_list <- Target_list[,-c(26:31)]
Target_list <- subset(Target_list,select = -c(customer_id,ID2,RX_Restriction_Indicator,PRESUMED_DEAD_FLAG))
Target_list <- Target_list[1:50,]
row.names(Target_list) <- Target_list$customer_id
d <- dist(as.matrix(Target_list))
e <- log(d)
hc <- hclust(e)
clusterCut <- cutree(hc,4)
plot(hc,cex=0.8,las=1)
groups <- cutree(hc,k=4)
groups
rect.hclust(hc,k=4,border = "red")
str(Target_list)
Target_list <- apply(Target_list,2,as.numeric)
Target_list <- subset(Target_list,select = -c(Primary_AD,Secondary,SPECIAlITY,State))
model_cluster <- kmeans(Target_list,4)
model_cluster
library("swirl")
swirl()
swirl()
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed,y=cars$dist)
plot(x=cars$dist,y=cars$speed)
plot(x=cars$speed,y=cars$dist)
plot(x=cars$speed,y=cars$dist,xlab="speed")
plot(x=cars$speed,y=cars$dist,xlab = "speed")
plot(x=cars$speed,y=cars$dist,xlab = "Speed")
plot(x=cars$speed,y=cars$dist,xlab = "Speed" , ylab = "Stopping Distance")
plot(x=cars$speed,y=cars$dist , ylab = "Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab = "Speed" , ylab = "Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab = "Speed" , ylab = "Stopping Distance" , main ="My Plot")
plot(cars,main="My plot")
plot(cars,main="My Plot")
?plot
plot(cars,sub="My Plot Subtitle")
plot(cars,col =2)
plot(cars,xlim=c(10,15))
plot(cars,pch=2)
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl,data = mtcars)
hist(mtcars$mpg)
ls(plants)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plant)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace = T)
sample(1:6,4,replace = TRUE)
sample(1:6,4,replace = TRUE)
sample(1:20,replace = FALSE)
sample(1:20,10,replace = FALSE)
sample(1:20,10)
LETTERS
sample(LETTERS)
prb = c(0.3,0.7)
flips <- sample(10,prob = c(0.3,0.7))
flips <- sample(c(0,1),100,prob = c(0.3,0.7))
flips <- sample(c(0,1),100,prob = c(0.3,0.7),replace = TRUE)
flips
sum(flips)
rbinom(100)
?rbinom
rbinom(1,size=100,prob = 0.7)
flips2 <- rbinom(c(0,1),100,prob = 0.7)
flips2 <- rbinom(100,size = 1,prob = 0.7)
flips2
flips2 <- rbinom(c(0,1),100,prob = 0.7)
rbinom(1,size=100,prob = 0.7)
flips2 <- rbinom(100,size = 1,prob = 0.7)
sum(flips2)
rbinom
?rnowm
?rnorm
rnorm(10)
rnorm(10,mean = 100,sd=25)
rpois(5)
?rpois
rpois(5,lambda = 10)
my_pois <- replicate(100,rpois(5,10))
class(my_pois)
my_pois
cm <- colMeans(my_pois)
hist(cm)
install_from_swirl("Data Analysis")
install_from_swirl("Data Analysis")
swirl()
install_from_swirl("Mathematical Biostatistics Boot Camp")
install_from_swirl("Open Intro")
install_from_swirl("Regression Models")
install_from_swirl("Getting and Cleaning Data")
swirl()
swirl()
install_from_swirl("Statistical Inference")
exit()
exit
Sys.setenv(JAVA_HOME = 'C:/Program Files/Java/jre1.8.0_161')
rm(list = ls())
setwd("C:/Users/chink/Desktop/Edureka/Kaggle/Movie Database/")
library(plyr) #data manipulation
library(tidyverse)# data manipulation
library(formattable)# table
library(splitstackshape) # split columns
library(jsonlite) #JSON format
library(wordcloud) #wordcloud
library(RColorBrewer) # Color Theme
library(ggthemes) #Themes for plot
library(tm) # Sentiment Analysis
library(RSentiment) # Sentiment Analysis
library(zoo) # Time
library(stringr)
movie <- read.csv("tmdb_5000_movies.csv", stringsAsFactors = F)
credits <- read.csv("tmdb_5000_credits.csv", stringsAsFactors = F)
glimpse(movie)
summary(movie)
genredf <-
movie %>% filter(nchar(movie$genres) > 2) %>% mutate(js = lapply(genres, fromJSON)) %>% unnest(js) %>% select(id, title, genre =
name)
slice(genredf)
temp <-
genredf %>% group_by(genre) %>% summarise(count = length(genre)) %>% arrange(desc(count))
wordcloud(
words = temp$genre,
freq = temp$count,
min.freq = 100,
max.words = 20,
random.color = F,
random.order = F,
rot.per = 0.35,
colors = brewer.pal(20, 'Dark2'),
scale = c(5, 0.2)
)
# Movie with Highest Budget
budget_mv <-
movie %>% select(original_title, budget) %>% drop_na(original_title) %>% arrange(desc(budget)) %>% head(10)
ggplot(budget_mv, aes(original_title, budget, fill = original_title)) + geom_bar(stat =
'identity') + scale_y_continuous(labels = scales::comma) +
theme(axis.text = element_text(angle = 90))
# Highest Grossing Movies
Gross_mv <-
movie %>% select(original_title, revenue) %>% drop_na(original_title) %>% arrange(desc(revenue)) %>% head(10)
ggplot(Gross_mv, aes(original_title, revenue, fill = original_title)) + geom_histogram(stat = 'identity') +
theme(axis.text = element_text(angle = 90)) + scale_y_continuous(labels =
scales::comma)
## Most Profitable Company
company <-
movie %>% filter(nchar(production_companies) > 2) %>% mutate(profit = lapply(production_companies, fromJSON)) %>% unnest(profit) %>% select(Production = name , original_title, revenue, budget) %>% group_by(Production) %>% summarise(profit = sum(as.numeric(revenue -
budget))) %>% arrange(desc(profit)) %>% head(10)
ggplot(company, aes(reorder(Production, profit), profit, fill = Production)) + geom_bar(stat = 'identity') + scale_y_continuous(labels = scales::comma) + theme(axis.text = element_text(angle =
90))
## Exploring the tagline
corpus <- Corpus(VectorSource(list(movie$tagline)))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, stripWhitespace)
corpus <- tm_map(corpus, removeWords, stopwords("en"))
dtm_tag <-
DocumentTermMatrix(VCorpus(VectorSource(corpus[1]$content)))
freq_tag <- colSums(as.matrix(dtm_tag))
sent_tag <-
calculate_sentiment(names(freq_tag)) %>% cbind(as.data.frame(freq_tag))
positive_tag <- sent_tag[sent_tag$sentiment == "Positive", ]
negative_tag <- sent_tag[sent_tag$sentiment == "Negative", ]
cat(
'Postive sentiment',
sum(positive_tag$freq_tag),
"Negative Sentiment",
sum(negative_tag$freq_tag),
sep = "\n"
)
par(mfrow = c(1, 2))
wordcloud(
positive_tag$text,
positive_tag$freq_tag,
min.freq = 10,
rot.per = 0,
max.words = 50,
random.order = F,
random.color = F
)
text(x = 0.5, y = 1.05, "Postive")
wordcloud(
negative_tag$text,
negative_tag$freq_tag,
min.freq = 10,
random.order = F,
random.color = F,
max.words = 50
)
text(x = 0.5, y = 1.05, "Negative")
## Movies year by year analysis
class(movie$release_date)
movie$release_date <- as.Date(movie$release_date, "%Y-%m-%d")
year_analysis <-
movie %>% drop_na(original_title) %>% mutate(Year = as.factor(format(release_date, "%Y", trim =
F)),
Date = as.factor(format(release_date, "%d", trim = F)),
Month = month.abb[as.factor(format(release_date, "%m", trim = F))]) %>% select(original_title, Year, Month, Date , vote_average) %>% group_by(Month) %>% drop_na(Month) %>% summarise(count =
n())
ggplot(year_analysis, aes(reorder(Month, count), count, fill = Month)) + geom_bar(stat =
'identity') + coord_flip() + geom_label(aes(label = count)) + theme(legend.position = 'None') + labs(x =
"Months", y = "Number of movies released")
movie <-
movie %>% drop_na(original_title) %>% mutate(Year = as.factor(format(release_date, "%Y", trim =
F)),
Date = as.factor(format(release_date, "%d", trim = F)),
Month = month.abb[as.factor(format(release_date, "%m", trim = F))])
movie$Normalized_rating <- movie$vote_average * movie$vote_count
movie$Normalized_rating <-
(movie$Normalized_rating - mean(movie$Normalized_rating)) / sd(movie$Normalized_rating)
movie %>% drop_na(Month) %>%  group_by(Month)  %>%  ggplot(aes(Month, Normalized_rating, fill =
Month)) + geom_boxplot(na.rm = T, outlier.colour = 'red') + coord_flip() +
theme(legend.position = 'None')
## Artist Comparision
#View(credits)
Credits_cast <-
credits %>% filter(nchar(cast) > 2) %>% mutate(js = lapply(cast, fromJSON)) %>% unnest(js) %>% select(title, name)
Credits_cast %>% group_by(name) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(10) %>% ggplot(aes(name, count, fill =
name)) + geom_bar(stat = 'identity') + coord_flip() + geom_label(aes(label =
count)) + theme(legend.position = 'None')
# Budget Revenue for Actor
db = movie %>% left_join(credits, by = c("id" = "movie_id"))
db_credit <-
db %>% filter(nchar(cast) > 2) %>% mutate(js = lapply(cast, fromJSON)) %>% unnest(js)
revenue <- function(df, col_name) {
temp_df <-
df %>% filter(name == col_name) %>% arrange(desc(revenue)) %>% head(10)
df_plot <-
ggplot(temp_df, aes(original_title, revenue, fill = original_title)) +
geom_bar(stat = 'identity') + theme(legend.position = 'None')  + labs(
title = paste(col_name, "'s Top 10 Movies", sep = ""),
x
=
'Movies',
y = 'Revenue'
) + theme(axis.text.x  = element_text(angle = 90),
plot.title = element_text(hjust = 0.5, size = 15)) + scale_y_continuous(labels = scales::comma)
print(df_plot)
}
revenue(db_credit, 'Tom Cruise')
budget <- function(df, col_names) {
temp_df <-
df %>% filter(name == col_names) %>% arrange(desc(budget)) %>% head(10)
df_plot <-
ggplot(temp_df, aes(original_title, budget , fill = original_title)) +
geom_bar(stat = 'identity') + theme(legend.position = 'None') + labs(
title = paste(col_names, "'s Top 10 budgeted Films", sep = ""),
y = "Budget",
x = "Movies"
) + theme(plot.title = element_text(hjust = 0.5, size = 15),
axis.text.x = element_text(angle = 90)) + scale_y_continuous(labels = scales::comma)
print(df_plot)
}
budget(db_credit, 'Tom Cruise')
db_credit %>% group_by(name) %>% summarise(sum_revenue= sum(revenue)) %>% arrange(desc(sum_revenue)) %>% head(10)
View(db_credit)
db_credit %>% filter(order==0) %>%group_by(name) %>% summarise(sum_revenue= sum(revenue)) %>% arrange(desc(sum_revenue)) %>% head(10)
top_stars <- db_credit %>% filter(order==0) %>%group_by(name) %>% summarise(sum_revenue= sum(revenue)) %>% arrange(desc(sum_revenue)) %>% head(10)
ggplot(top_stars,aes(name,sum_revenue,fill=name)) + geom_box(stat='identity')
ggplot(top_stars,aes(name,sum_revenue,fill=name)) + geom_bar(stat='identity')
ggplot(top_stars,aes(name,sum_revenue,fill=name)) + geom_bar(stat='identity') + theme(axis.text.x = element_text(angle=90))
ggplot(top_stars,aes(reorder(name,sum_revenue),sum_revenue,fill=name)) + geom_bar(stat='identity') + theme(axis.text.x = element_text(angle=90))
?reorder
ggplot(top_stars,aes(reorder(name,sum_revenue),sum_revenue,fill=name)) + geom_bar(stat='identity') + theme(axis.text.x = element_text(angle=90))
ggplot(top_stars,aes(reorder(name,sum_revenue),sum_revenue,fill=name)) + geom_bar(stat='identity') + theme(axis.text.x = element_text(angle=90)) + labs(title='Top 10 Actors Revenue',x='Actors',y='Revenue')
ggplot(top_stars,aes(reorder(name,sum_revenue),sum_revenue,fill=name)) + geom_bar(stat='identity') + theme(axis.text.x = element_text(angle=90)) + labs(title='Top 10 Actors Revenue',x='Actors',y='Revenue') + scale_y_continuous(labels=scales::comma)
ggplot(top_stars,aes(reorder(name,sum_revenue),sum_revenue,fill=name)) + geom_bar(stat='identity') + theme(axis.text.x = element_text(angle=90),legend.position = 'None') + labs(title='Top 10 Actors Revenue',x='Actors',y='Revenue') + scale_y_continuous(labels=scales::comma)
ggplot(top_stars, aes(reorder(name, sum_revenue), sum_revenue, fill = name)) +
geom_bar(stat =  'identity') + theme(axis.text.x = element_text(angle = 90),
legend.position = 'None') +
labs(title = 'Top 10 Actors Revenue', x = 'Actors', y = 'Revenue') +
scale_y_continuous(labels = scales::comma)
ggplot(top_stars, aes(reorder(name, sum_revenue), sum_revenue, fill = name)) +
geom_bar(stat =  'identity') + theme(axis.text.x = element_text(angle = 90),
legend.position = 'None',plot.title = element_text(hjust=0.5,size = 15)) +
labs(title = 'Top 10 Actors Revenue', x = 'Actors', y = 'Revenue') +
scale_y_continuous(labels = scales::comma)
ggplot(top_stars, aes(reorder(sum_revenue,name), sum_revenue, fill = name)) +
geom_bar(stat =  'identity') + theme(axis.text.x = element_text(angle = 90),
legend.position = 'None',plot.title = element_text(hjust=0.5,size = 15)) +
labs(title = 'Top 10 Actors Revenue', x = 'Actors', y = 'Revenue') +
scale_y_continuous(labels = scales::comma)
ggplot(top_stars, aes(reorder(name,sum_revenues), sum_revenue, fill = name)) +
geom_bar(stat =  'identity') + theme(axis.text.x = element_text(angle = 90),
legend.position = 'None',plot.title = element_text(hjust=0.5,size = 15)) +
labs(title = 'Top 10 Actors Revenue', x = 'Actors', y = 'Revenue') +
scale_y_continuous(labels = scales::comma)
ggplot(top_stars, aes(reorder(name,sum_revenue), sum_revenue, fill = name)) +
geom_bar(stat =  'identity') + theme(axis.text.x = element_text(angle = 90),
legend.position = 'None',plot.title = element_text(hjust=0.5,size = 15)) +
labs(title = 'Top 10 Actors Revenue', x = 'Actors', y = 'Revenue') +
scale_y_continuous(labels = scales::comma)
ggplot(top_stars, aes(reorder(name,desc(sum_revenue), sum_revenue, fill = name)) +
geom_bar(stat =  'identity') + theme(axis.text.x = element_text(angle = 90),
legend.position = 'None',plot.title = element_text(hjust=0.5,size = 15)) +
labs(title = 'Top 10 Actors Revenue', x = 'Actors', y = 'Revenue') +
scale_y_continuous(labels = scales::comma)
ggplot(top_stars, aes(reorder(name,desc(sum_revenue)), sum_revenue, fill = name)) +
geom_bar(stat =  'identity') + theme(axis.text.x = element_text(angle = 90),
legend.position = 'None',plot.title = element_text(hjust=0.5,size = 15)) +
labs(title = 'Top 10 Actors Revenue', x = 'Actors', y = 'Revenue') +
scale_y_continuous(labels = scales::comma)
ggplot(top_stars, aes(reorder(name,sum_revenue), sum_revenue, fill = name)) +
geom_bar(stat =  'identity') + theme(axis.text.x = element_text(angle = 90),
legend.position = 'None',plot.title = element_text(hjust=0.5,size = 15)) +
labs(title = 'Top 10 Actors Revenue', x = 'Actors', y = 'Revenue') +
scale_y_continuous(labels = scales::comma)
get_cor <- function(df){
m <- cor(df$x,df$y,use = 'pairwise.complete.obs')
eq <- substitute(expr = r= cor,env=list(cor=format(m,digits = 4)))
return(as.character(as.expression(eq)))
}
get_cor <- function(df){
m <- cor(df$x,df$y,use = 'pairwise.complete.obs')
eq <- substitute(expr = r= cor,env=list(cor=format(m,digits = 4)))
return(as.character(as.expression(eq)))
}
get_cor <- function(df){
m <- cor(df$x,df$y,use = 'pairwise.complete.obs')
eq <- substitute(expr = r= cor,env=list(cor=format(m,digits = 4)))
return(as.character(as.expression(eq)))
}
get_cor <- function(df){
m <- cor(df$x,df$y,use = 'pairwise.complete.obs');
eq <- substitute(expr = r= cor,env=list(cor=format(m,digits = 4)))
return(as.character(as.expression(eq)))
}
get_cor <- function(df){
m <- cor(df$x,df$y, use="pairwise.complete.obs");
eq <- substitute(expr=r==cor,env=list(cor=format(m, digits = 4)))
return(as.character(as.expression(eq) ))
}
get_cor <- function(df){
m <- cor(df$x,df$y,use = 'pairwise.complete.obs')
eq <- substitute(expr = r==cor,env=list(cor=format(m,digits = 4)))
return(as.character(as.expression(eq)))
}
temp <- db_credit %>% select(budget,popularity) %>% distinct()
View(temp)
ggplot(temp,aes(budget,popularity))
ggplot(temp,aes(budget,popularity))+stat_bin_hex(bins = 15)
ggplot(temp,aes(budget,popularity))+stat_bin_hex(bins = 15)+scale_fill_distiller(palette = "Spectral")
ggplot(temp,aes(budget,popularity))+stat_bin_hex(bins = 15)+scale_fill_distiller(palette = "Spectral")+stat_smooth(method = lm)
ggplot(temp,aes(budget,popularity))+
stat_bin_hex(bins = 15)+
scale_fill_distiller(palette = "Spectral")+
stat_smooth(method = lm,color="red")
ggplot(temp,aes(budget,popularity))+
stat_bin_hex(bins = 15)+
scale_fill_distiller(palette = "Spectral")+
stat_smooth(method = lm,color="red",size=2)
ggplot(temp,aes(budget,popularity))+
stat_bin_hex(bins = 15)+
scale_fill_distiller(palette = "Spectral")+
stat_smooth(method = lm,color="red",size=2)+scale_x_continuous(labels=scales::comma)
get_cor <- function(df){
m <- cor(df$x,df$y,use = 'pairwise.complete.obs')
eq <- substitute(expr = r==cor,env=list(cor=format(m,digits = 4)))
return(as.character(as.expression(eq)))
}
get_cor(temp$budget,temp$popularity)
get_cor(data.frame(  temp$budget,temp$popularity))
get_cor(data.frame(temp$budget,temp$popularity))
cor(temp$budget,temp$popularity)
cor(temp$budget,temp$popularity,use="pairwise.complete.obs")
popularity_cor <-cor(data.frame(temp$budget,temp$popularity))
Tom <- db_credit %>% filter(name='Tom Cruise') %>% subset(!duplicated(original_title)) %>% arrange(desc(budget)) %>% head(10)
Tom <- db_credit %>% filter(name=='Tom Cruise') %>% subset(!duplicated(original_title)) %>% arrange(desc(budget)) %>% head(10)
View(Tom)
Tom <- db_credit %>% filter(name=='Tom Cruise') %>% subset(!duplicated(original_title)) %>% arrange(desc(budget)) %>% head(20)
View(Tom)
Tom <- db_credit %>% filter(name=='Tom Cruise') %>% subset(!duplicated(original_title)) %>% arrange(desc(budget)) %>% head(20) %>% select(budget,original_title,popularity)
View(Tom)
ggplot(Tom,aes(budget,popularity)) +geom_points()
ggplot(Tom,aes(budget,popularity)) +geom_point()
ggplot(Tom,aes(budget,popularity,col = as.factor(original_title))) +geom_point()
ggplot(Tom,aes(budget,popularity,col = as.factor(original_title))) +geom_point() +theme(axis.text.x = element_text(angle=90))
ggplot(Tom,aes(budget,popularity,col = as.factor(original_title))) +geom_point() +theme(axis.text.x = element_text(angle=90),legend.position = 'None')
ggplot(Tom,aes(budget,popularity,col = as.factor(original_title))) +geom_point() +theme(axis.text.x = element_text(angle=90),legend.position = 'None')
ggplot(Tom, aes(budget, popularity, col = as.factor(original_title))) +
geom_point() + theme(axis.text.x = element_text(angle = 90),
legend.position = 'None') +
stat_smooth(method = "lm")
ggplot(Tom, aes(budget, popularity, col = as.factor(original_title))) +
geom_point() + theme(axis.text.x = element_text(angle = 90),
legend.position = 'None') +
stat_smooth(method = "lm",color='red')
ggplot(Tom, aes(budget, popularity, col = as.factor(original_title))) +
geom_point() + theme(axis.text.x = element_text(angle = 90),
legend.position = 'None') +
stat_smooth(method = "lm",color='red',size=2)
ggplot(Tom, aes(budget, popularity, col = as.factor(original_title))) +
geom_point() + theme(axis.text.x = element_text(angle = 90),
legend.position = 'Bottom') +
stat_smooth(method = "lm",color='red',size=2)
ggplot(Tom, aes(budget, popularity, col = as.factor(original_title))) +
geom_point() + theme(axis.text.x = element_text(angle = 90),
legend.position = 'bottom') +
stat_smooth(method = "lm",color='red',size=2)
ggplot(Tom, aes(budget, popularity, col = as.factor(original_title))) +
geom_point() + theme(axis.text.x = element_text(angle = 90),
legend.position = 'bottom',legend.title = 'Movie Name') +
stat_smooth(method = "lm",color='red',size=2)
ggplot(Tom, aes(budget, popularity, col = as.factor(original_title))) +
geom_point() + theme(axis.text.x = element_text(angle = 90),
legend.position = 'bottom') + legend(title = 'Movie Names')
?legend
ggplot(Tom, aes(budget, popularity, col = as.factor(original_title))) +
geom_point() + theme(axis.text.x = element_text(angle = 90),
legend.position = 'bottom') + legend(legend  = 'Movie Names')
ggplot(Tom, aes(budget, popularity, col = as.factor(original_title))) +
geom_point() + theme(axis.text.x = element_text(angle = 90),
legend.position = 'bottom') + legend(legend  = 'Movie Names',x=budget,y=popularity)
ggplot(Tom, aes(budget, popularity, col = as.factor(original_title))) +
geom_point() + theme(axis.text.x = element_text(angle = 90),
legend.position = 'bottom') + legend(legend  = 'Movie Names',x=budget,y=F)
ggplot(Tom, aes(budget, popularity, col = as.factor(original_title))) +
geom_point() + theme(axis.text.x = element_text(angle = 90),
legend.position = 'bottom') + legend(legend  = 'Movie Names',x=T,y=F)
ggplot(Tom, aes(budget, popularity, col = as.factor(original_title))) +
geom_point() + theme(axis.text.x = element_text(angle = 90),
legend.position = 'bottom')
ggplot(Tom, aes(budget, popularity, col = as.factor(original_title))) +
geom_point() + theme(axis.text.x = element_text(angle = 90),
legend.position = 'bottom')
stat_smooth(method = "lm",color='red',size=2) +scale_x_continuous(labels=scales::comma)
ggplot(Tom, aes(budget, popularity, col = as.factor(original_title))) +
geom_point() + theme(axis.text.x = element_text(angle = 90),
legend.position = 'bottom')
ggplot(Tom, aes(budget, popularity, col = as.factor(original_title))) +
geom_point() + theme(axis.text.x = element_text(angle = 90),
legend.position = 'bottom') +
stat_smooth(method = "lm",color='red',size=2) +scale_x_continuous(labels=scales::comma)
